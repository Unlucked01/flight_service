services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-ui:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: 123
      ME_CONFIG_BASICAUTH_PASSWORD: 321
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongo
    volumes:
      - mongo_data:/data/db
    depends_on:
      - mongo

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6380:6380"

  user_service:
    build:
      context: ./user_service
    image: user_service:latest
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGO_URI=mongodb://mongo:27017/user_database
    depends_on:
      - kafka
      - mongo
    ports:
      - "8001:8001"

  flight_ticket_service:
    build:
      context: ./flight_ticket_service
    image: flight_ticket_service:latest
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGO_URI=mongodb://mongo:27017/flight_database
    depends_on:
      - kafka
      - mongo
    ports:
      - "8000:8000"

volumes:
  mongo_data:
